version: "2.3"

networks:
  ros:
    driver: bridge

services:
  dummy_camera:
    image: stereo_matching:latest
    command: bash /root/catkin_ws/src/dummy_camera/src/dummy_camera.sh
    networks:
      ros:
        ipv4_address: ${DUMMY_CAMERA_IP}
    environment:
      - "ROS_HOSTNAME=${DUMMY_CAMERA_IP}"
      - "ROS_MASTER_URI=http://${HOST_IP}:11311"

  stereo_matching:
    image: stereo_matching:latest
    command: bash -c "source ~/catkin_ws/devel/setup.bash && cd ~/catkin_ws/src/stereo_matching/src/ && python stereo_matching.py"
    networks:
      ros:
        ipv4_address: ${STEREO_MATCHING_IP}
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=utility,compute
      - "ROS_HOSTNAME=${STEREO_MATCHING_IP}"
      - "ROS_MASTER_URI=http://${HOST_IP}:11311"

  instance_segmentation:
    image: instance_segmentation:latest
    command: bash -c "source ~/catkin_ws/devel/setup.bash && cd ~/catkin_ws/src/instance_segmentation/src/ && python instance_segmentation_node.py"
    networks:
      ros:
        ipv4_address: ${INSTANCE_SEGMENTATION_IP}
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=utility,compute
      - "ROS_HOSTNAME=${INSTANCE_SEGMENTATION_IP}"
      - "ROS_MASTER_URI=http://${HOST_IP}:11311"

  synthesis:
    image: synthesis:latest
    command: bash -c "source ~/catkin_ws/devel/setup.bash && cd ~/catkin_ws/src/synthesis/src/ && python synthesis_node_vector.py"
    networks:
      ros:
        ipv4_address: ${SYNTHESIS_IP}
    environment:
      - "ROS_HOSTNAME=${SYNTHESIS_IP}"
      - "ROS_MASTER_URI=http://${HOST_IP}:11311"
